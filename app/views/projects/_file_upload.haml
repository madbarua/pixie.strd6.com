#import_drop_window.window(style="top: 100px; left: 50px;")
  %span.ui-icon.ui-icon-close
  %h3.ui-widget-header File Importer
  #import_drop_zone
    %p Drag files from your desktop here and we'll add them to your project.

- content_for :javascript do
  :coffeescript
    $("#import").live "mousedown", ->
      if $(this).hasClass('active')
        $("#import_drop_window").hide()
      else
        $("#import_drop_window").show()

      $(this).toggleClass('active')

    $("#import_drop_window .ui-icon-close").live "click", ->
      $("#import").removeClass('active')

    $ ->
      extractBase64Data = (dataUrl) ->
        dataUrl.substring(dataUrl.indexOf(',') + 1)

      $("html").dropImageReader
        matchType: /.*/
        callback: (file, event) ->
          if event.target.readyState is FileReader.DONE
            if file.type.match(/javascript/i)
              path = projectConfig.directories.lib
              type = "text"
              extension = "js"
              language = "javascript"

            else if file.type.match "audio"
              extension = file.name.match(/\.([^\.]*)$/, '')?[1]
              path = projectConfig.directories.sounds
              type = "binary"

            else if file.type is ""
              extension = file.name.match(/\.([^\.]*)$/, '')?[1]

              if extension is "coffee"
                path = projectConfig.directories.source
                type = "text"
                language = "coffeescript"
              else if extension is "tilemap"
                ;#TODO
              else if extension is "tutorial"
                path = ""
                type = "text"
              else if extension is "json"
                path = ""
                type = "text"
                language = "json"

            else if file.type.match(/image.*/)
              path = projectConfig.directories.images
              type = "image"
              extension = "png"
              autoOpen = false

            if path?
              name = file.name.replace(/\.[^\.]*$/, '')
              contentsBase64 = extractBase64Data(event.target.result)
              saveFile
                contents_base64: contentsBase64
                path: "/\#{path}/\#{name}.\#{extension}"

              contents = Base64.decode(contentsBase64) if type is "text"

              newFileNode
                name: name
                type: type
                extension: extension
                language: language
                path: path
                contents: contents
                autoOpen: autoOpen

              notify "'\#{name}.\#{extension}' successfully imported."
