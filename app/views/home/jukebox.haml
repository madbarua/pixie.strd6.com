#player

.controls
  %label#now_playing Now Playing:
  %input#song_input(placeholder="song, artist, or genre")
  %button#search Search
  %button#next Next
  %button#stop Stop

#playlist.module
  %h2 Playlist
  %ul.songs
#search_results.module
  %h2 Search Results
  %ul.songs

%script#song_template.template(type="text/x-jQuery-tmpl")
  %li.song(data-id="${id}" title="${title}")
    .title ${title}
    .duration ${durationFormat(duration)}

- content_for :javascript do
  :coffeescript
    window.player = null

    window.durationFormat = (time) ->
      minutes = (time / 60).floor()
      seconds = (time % 60)
      seconds = "0" + seconds if seconds < 10

      minutes + ":" + seconds

    $("#search_results .song").live "click", ->
      $(this).appendTo("#playlist .songs")

    loadPlayerAPI = (callback) ->
      # Load player api asynchronously.
      tag = document.createElement('script')
      tag.src = "http://www.youtube.com/player_api"
      firstScriptTag = document.getElementsByTagName('script')[0]
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)
      done = false
      player = null

      window.onYouTubePlayerAPIReady = ->
        callback()

    loadPlayerAPI ->
      getSongs("Lady Gaga")

      $("#search").click ->
        getSongs($("#song_input").val())
        $("#song_input").val('')

      $("#next").click ->
        nextSong()

      $("#stop").click ->
        stopSong()

      $("#song_input").bind "keydown", "return", ->
        getSongs($("#song_input").val())
        $("#song_input").val('')

    getSongs = (terms) ->
      url = "http://gdata.youtube.com/feeds/api/videos/-/{http%3A%2F%2Fgdata.youtube.com%2Fschemas%2F2007%2Fcategories.cat}Music?alt=json&callback=?"

      $.getJSON url, {
        enablejsapi: 1
        q: terms
      }, (result) ->
        console.log result

        entries = processSearchResults(result.feed.entry)

        $("#song_template").tmpl(entries).appendTo($("#search_results .songs").empty())

        if !player || player.state == -1
          nextSong()

    processSearchResults = (results) ->
      results.map (result) ->
        unless result.yt$noembed
          duration: result.media$group.yt$duration.seconds
          id: result.id.$t.split('/').last()
          title: result.title.$t
      .compact()

    nextSong = () ->
      song = $("#playlist .songs .song").first()

      song = $("#search_results .songs .song").first() unless song.length

      if song.length
        id = song.data("id")
        title = song.attr("title")

        createPlayer(id)
        $("#now_playing").text("Now Playing: \#{title}")

        song.remove()

    stopSong = ->
      player?.stopVideo()

    createPlayer = (id) ->
      srcUrl = "http://www.youtube.com/embed/\#{id}?autoplay=1"
      $("#player").attr("src", srcUrl)

    createPlayer = (id) ->
      $("#player").empty()

      window.player = new YT.Player 'player',
        width: 1
        height: 1
        playerVars:
          controls: 0
        videoId: id
        events:
          onReady: (event) ->
            event.target.playVideo()

          onStateChange: (event) ->
            if event.data == YT.PlayerState.ENDED
              nextSong()
