= stylesheet_link_tag "branded"

%style
  :sass
    ul.actions .menu ul.round
      li
        input
          display: inline-block
          vertical-align: middle

    strong
      font-weight: bold

    em
      font-style: italic

    .collection
      ul
        padding-top: 0.5em

    .comments_area
      margin-top: 1em
      max-height: 600px
      padding: 1em 2em
      overflow: auto
      width: 450px

      h3
        margin: 0

      #comment_preview
        background-color: white
        font-weight: normal
        margin: 15px 0
        padding: 0 5px

      label
        margin-top: 0

      textarea
        height: 75px

    .sprite_container
      display: inline-block
      margin-right: 5em
      vertical-align: top

    .static-picture_edit, .static-status_online, .static-photo_add, .static-table_edit, .static-cross
      display: inline-block
      vertical-align: bottom

    #tag
      width: 200px

- @title = sprite.display_name
- @meta_desc = sprite.meta_desc
- @has_reg_popup = true

.sprite_container
  %h1= sprite.display_name

  = link_to image_tag(sprite.image.url, :alt => sprite.display_name), load_sprite_path(sprite)

  %p= sprite.description

  .clear
  %p= author_link(sprite)

.sprite_container
  -if sprite.parent
    %h1
      Remixed from
      = sprite.parent.display_name

    = link_to image_tag(sprite.parent.image.url, :alt => sprite.parent.display_name), load_sprite_path(sprite.parent)

    %p= sprite.parent.description

    .clear
    %p= author_link(sprite.parent)

%ul.actions
  %li
    %a.button(href="#{load_sprite_path(sprite)}")
      .static-picture_edit
      Load in Editor
  - if current_user
    %li.avatar
      %a.button(href="#" data-sprite_id="#{sprite.id}")
        .static-status_online
        Set as Avatar
    %li.listMenu.menu.collection
      %a.button(href="#" data-sprite_id="#{sprite.id}")
        .static-photo_add
        Add to Collection
      %ul.round{:style => "display:none;"}
        - current_user.collections.each do |collection|
          %li{ "data-collection_id" => collection.id }
            = check_box_tag "collection", "1", collection.sprites.include?(sprite), :id => nil, :name => nil
            = collection.title
        %li{ "data-collection_id" => "new" } New Collection
  - if owner_or_admin?
    %li
      %a.button(href="#{edit_sprite_path(sprite)}")
        .static-table_edit
        Edit Details
    %li
      %a.button(href="#{sprite_path(sprite)}" data-method="delete")
        .static-cross
        Delete

%h3 Tags
.tags
  - sprite.tag_list.each do |tag|
    = sprite_tag_link(sprite, tag)

  - sprite.source_list.each do |source|
    = sprite_tag_link(sprite, source)

  - sprite.dimension_list.each do |dimension|
    = sprite_tag_link(sprite, dimension)

  = form_tag add_tag_sprite_path, {"data-sprite_id" => sprite.id} do
    = text_field_tag :tag, nil, :placeholder => "Tag name"
    = submit_tag "Add"

= display_comments sprite

#newCollectionModal.modalElement
  = render :partial => "collections/form"

- content_for :javascript do
  :coffeescript
    $ ->
      ajaxifyForm = (selector) ->
        form = $(selector)
        form.ajaxForm
          dataType: "json"
          beforeSerialize: ($form) ->
            $form.find("input[name=sprite_id]").val spriteId
          success: (data) ->
            if data.status == "ok"
              $.modal.close()
              newCollectionCallback data.title, data.id
            else
              errorExplanation = form.find(".errorExplanation")
              errorExplanation = $("<div class='errorExplanation' />") if errorExplanation.length == 0
              errorList = $("<ul />")
              $.each data.errors, (i, error) ->
                errorList.append $("<li />").text(error)

              errorExplanation.html ""
              errorExplanation.append errorList
              form.prepend errorExplanation

      newCollectionCallback = (title, id) ->
        $(".listMenu ul li:last-child").each ->
          parentSpriteId = $(this).parent().prev().attr("data-sprite_id")
          newElem = $("<li />").attr("data-collection_id", id)
          newElem.text title

          if parentSpriteId == spriteId
            newElem.prepend "<input type='checkbox', value='1' checked='checked' />"
          else
            newElem.prepend "<input type='checkbox', value='1' />"

          $(this).before newElem

      ajaxifyForm "#new_collection"

      displayedMenu = null
      spriteId = null

      $(".listMenu .button").click ->
        spriteId = $(this).attr("data-sprite_id")
        displayedMenu = $(this).next("ul")
        displayedMenu.show()
        setTimeout ->
          $(document).one "click", ->
            displayedMenu.fadeOut()
        , 0

        return false

      $(".menu li").live "click", (event) ->
        collectionId = $(this).attr("data-collection_id")
        checkbox = $(this).children("input")
        boxClick = false
        boxClick = true  if $(event.target).is("input")
        if collectionId == "new"
          $("#newCollectionModal").modal()
        else
          checked = not (checkbox.attr("checked") ^ boxClick)
          checkbox.attr "checked", checked
          if checked
            $.post "/collections/\#{collectionId}/add", sprite_id: spriteId, "json"
          else
            $.post "/collections/\#{collectionId}/remove", sprite_id: spriteId, "json"

      $(".avatar a").live "click", (event) ->
        notify "Saving..."
        spriteId = $(this).attr("data-sprite_id")
        $.post "#{set_avatar_user_path(current_user)}", sprite_id: spriteId, (data) ->
          notify "Avatar successfully changed."

