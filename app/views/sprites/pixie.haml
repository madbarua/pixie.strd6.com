- @title = "Pixel Editor"
- @fullscreen = true

- unless sprite.new_record?
  - @meta_desc = "Load #{sprite.meta_desc}"

= stylesheet_link_tag 'pixie'

- width = @width || 32
- height = @height || 32
- data = @data
- parent_data = sprite.parent_data

-# Force chrome frame
= render :partial => "/shared/chrome_frame"

%section#pixie

#optionsModal{ :style => 'display: none' }

#newCanvasModal{ :style => 'display: none' }
  %p
    = label_tag :resize_width, "width"
    = text_field_tag :resize_width, width, {:title => 'width'}
  %p
    = label_tag :resize_height, "height"
    = text_field_tag :resize_height, height, {:title => 'height'}

  = button_to_function "New Canvas", "newCanvas()"

- content_for :javascript do
  :coffeescript
    $("html").dropImageReader
      callback: (file, event) ->
        canvas.fromDataURL(event.target.result)

    $("html").pasteImageReader
      callback: (file, event) ->
        canvas.fromDataURL(event.target.result)

    (($) ->
      window.setNewDimensions = ->
        $("#newCanvasModal").removeAttr("style").modal
          containerCss:
            height: 180
            width: 200
          ,
          onClose: ->
            $.modal.close()
            $("#newCanvasModal").attr("style", "display: none")

      window.newCanvas = ->
        newWidth = $('#resize_width').val()
        newHeight = $('#resize_height').val()

        window.location.href = '/sprites/new?width=' + newWidth + '&height=' + newHeight

      postImage = ->
        notify "Saving, please wait..."

        postData =
          'format': 'json'
          'sprite[width]': #{width}
          'sprite[height]': #{height}
          'sprite[parent_id]': #{@parent_id.to_json}
          'sprite[file_base64_encoded]': canvas.toBase64()
          'sprite[replay_data]': JSON.stringify(canvas.getReplayData())

        $.post '/sprites', postData, (data) ->
          if #{facebook?}
            FB.ui
              method: 'feed'
              link: 'http://pixie.strd6.com'
              picture: "http://images.pixie.strd6.com/sprites/" + data.id + "/large.png"
              message: 'Check out my awesome pixel art!'
            , (response) ->
              if response && response.post_id
                alert 'Post was published.'
              else
                alert 'Post was not published.'

            notify "Saved!"
          else
            if data.redirect
              window.location = data.redirect
            else
              notify "Saved as <a href='/sprites/" + data.sprite.id + "'>" + (data.sprite.title || ('Sprite ' + data.sprite.id)) + "</a>"

          trackPageview "/event/save_drawing"
          canvas.dirty(false)
          $(".tool.button[title=Save]").removeAttr("disabled")
        , "json"

      pixie = Pixie.Editor.Pixel.create
        width: #{width}
        height: #{height}
        pixelSize: if #{facebook?} then 8 else 16
        initializer: (canvas) ->
          # HAX: Global ref of canvas
          window.canvas = canvas

          canvas.addAction
            name: "replay"
            perform: (canvas) ->
              canvas.replay()
            undoable: false

          if #{facebook?}
            canvas.addAction
              name: "Post to FB"
              icon: "/assets/icons/user_comment.png"
              perform: (canvas) ->
                postImage()
              undoable: false
          else
            canvas.addAction
              name: "new"
              perform: (canvas) ->
                setNewDimensions()
              undoable: false

            canvas.addAction
              name: "download"
              hotkeys: ["ctrl+s"]
              perform: (canvas) ->
                w = window.open()
                w.document.location = canvas.toDataURL()
              undoable: false

            canvas.addAction
              name: "save"
              perform: (canvas) ->
                $(".tool.button[title=Save]").attr("disabled", true)
                postImage()
              undoable: false

            canvas.addAction
              name: "Post to Chat"
              icon: "/assets/icons/picture_go.png"
              perform: (canvas) ->
                wrapper = $ "<div />"
                img = $ "<img />"
                img.attr('src', canvas.toDataURL())

                img.appendTo(wrapper)

                $.post '/chats', { body: wrapper.html() }, ->
                  $('body').scrollTo
                    left: '0%'
                    top: '100%'

                commenter = "#{ current_user ? current_user.display_name : 'Anonymous' }"
                commenter_id = #{ current_user ? current_user.id : -1 }
                prev_commenter = $('#chats li span.name:last').text().replace(': ', '')

                li = $ "<li />"
                hr = $ "<hr />"
                if commenter_id > 0
                  a = $("<a href='/people/\#{commenter_id}' target='_blank'>\#{commenter}</a>")

                if a
                  name = $ '<span />',
                    class: "name"

                  name.append(a)
                else
                  name = $ '<span />',
                    class: "name"
                    text: commenter

                time = $ '<span />',
                  class: "time"
                  text: "#{Time.zone.now.strftime('%I:%M%p')} "

                message = $ '<span />',
                  class: "message"

                message.append(img)

                if commenter != prev_commenter
                  li.append(hr, name, time)

                li.append(message)

                $('#chats').append(li)

                $("#chat_zone").trigger('show')

                setTimeout ->
                  $('#chats').scrollTo
                    left: '0%'
                    top: '100%'
                , 100

          ((frameData) ->
            canvas.setInitialState(frameData)
          )(#{data.to_json})

          if #{!!@replay_data}
            canvas.replay(#{@replay_data || "null"}, #{parent_data.to_json})

          window.onbeforeunload = ->
            if canvas.dirty()
              "Your changes haven't yet been saved, if you leave now you will lose your work."

      $("#pixie").replaceWith(pixie)
      window.currentComponent = pixie
    )(jQuery)
